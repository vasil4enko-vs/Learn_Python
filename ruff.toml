# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pycache__",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.13 (Support Python 3.13+)
# target-version = "py313"  # Indicated in pyproject.toml

[lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
# select = ["E4", "E7", "E9", "F"]  # By default
select = [
    # Airflow (AIR)
    # "AIR",
    # eradicate (ERA)
    "ERA",
    # FastAPI (FAST)
    "FAST",
    # flake8-2020 (YTT)
    "YTT",
    # flake8-annotations (ANN)
    "ANN",
    # flake8-async (ASYNC)
    "ASYNC",
    # flake8-bandit (S)
    "S",
    # flake8-blind-except (BLE)
    "BLE",
    # flake8-boolean-trap (FBT)
    "FBT",
    # flake8-bugbear (B)
    "B",
    # flake8-builtins (A)
    "A",
    # flake8-commas (COM)
    # "COM",
    # flake8-comprehensions (C4)
    "C4",
    # flake8-copyright (CPY)
    # "CPY",
    # flake8-datetimez (DTZ)
    "DTZ",
    # flake8-debugger (T10)
    "T10",
    # flake8-django (DJ)
    "DJ",
    # flake8-errmsg (EM)
    "EM",
    # flake8-executable (EXE)
    "EXE",
    # flake8-fixme (FIX)
    # "FIX",
    # flake8-future-annotations (FA)
    "FA",
    # flake8-gettext (INT)
    "INT",
    # flake8-implicit-str-concat (ISC)
    "ISC",
    # flake8-import-conventions (ICN)
    "ICN",
    # flake8-logging (LOG)
    "LOG",
    # flake8-logging-format (G)
    "G",
    # flake8-no-pep420 (INP)
    # "INP",
    # flake8-pie (PIE)
    "PIE",
    # flake8-print (T20)
    # "T20",
    # flake8-pyi (PYI)
    "PYI",
    # flake8-pytest-style (PT)
    "PT",
    # flake8-quotes (Q)
    "Q",
    # flake8-raise (RSE)
    "RSE",
    # flake8-return (RET)
    "RET",
    # flake8-self (SLF)
    "SLF",
    # flake8-simplify (SIM)
    "SIM",
    # flake8-tidy-imports (TID)
    "TID",
    # flake8-todos (TD)
    "TD",
    # flake8-type-checking (TC)
    "TC",
    # flake8-unused-arguments (ARG)
    "ARG",
    # flake8-use-pathlib (PTH)
    "PTH",
    # flynt (FLY)
    "FLY",
    # isort (I)
    "I",
    # mccabe (C90)
    "C90",
    # NumPy-specific rules (NPY)
    "NPY",
    # pandas-vet (PD)
    "PD",
    # pep8-naming (N)
    "N",
    # Perflint (PERF)
    "PERF",
    # pycodestyle (E, W)
    ## Error (E)
    "E",
    ## Warning (W)
    "W",
    # pydoclint (DOC)
    "DOC",
    # pydocstyle (D)
    "D",
    # Pyflakes (F)
    "F",
    # pygrep-hooks (PGH)
    "PGH",
    # Pylint (PL)
    ## Convention (PLC)
    "PLC",
    ## Error (PLE)
    "PLE",
    ## Refactor (PLR)
    "PLR",
    ## Warning (PLW)
    "PLW",
    # pyupgrade (UP)
    "UP",
    # refurb (FURB)
    "FURB",
    # Ruff-specific rules (RUF)
    "RUF",
    # tryceratops (TRY)
    "TRY",
]
ignore = ["RUF002"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
